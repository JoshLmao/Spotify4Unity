<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpotifyAPI.Web</name>
    </assembly>
    <members>
        <member name="T:SpotifyAPI.Web.Enums.TimeRangeType">
            <summary>
                Only one value allowed
            </summary>
        </member>
        <member name="M:SpotifyAPI.Web.IClient.Download(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Downloads data from an URL and returns it
            </summary>
            <param name="url">An URL</param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.IClient.DownloadAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Downloads data async from an URL and returns it
            </summary>
            <param name="url"></param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.IClient.DownloadRaw(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Downloads data from an URL and returns it
            </summary>
            <param name="url">An URL</param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.IClient.DownloadRawAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Downloads data async from an URL and returns it
            </summary>
            <param name="url"></param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.IClient.DownloadJson``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Downloads data from an URL and converts it to an object
            </summary>
            <typeparam name="T">The Type which the object gets converted to</typeparam>
            <param name="url">An URL</param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.IClient.DownloadJsonAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Downloads data async from an URL and converts it to an object
            </summary>
            <typeparam name="T">The Type which the object gets converted to</typeparam>
            <param name="url">An URL</param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.IClient.Upload(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Uploads data from an URL and returns the response
            </summary>
            <param name="url">An URL</param>
            <param name="body">The Body-Data (most likely a JSON String)</param>
            <param name="method">The Upload-method (POST,DELETE,PUT)</param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.IClient.UploadAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Uploads data async from an URL and returns the response
            </summary>
            <param name="url">An URL</param>
            <param name="body">The Body-Data (most likely a JSON String)</param>
            <param name="method">The Upload-method (POST,DELETE,PUT)</param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.IClient.UploadRaw(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Uploads data from an URL and returns the response
            </summary>
            <param name="url">An URL</param>
            <param name="body">The Body-Data (most likely a JSON String)</param>
            <param name="method">The Upload-method (POST,DELETE,PUT)</param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.IClient.UploadRawAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Uploads data async from an URL and returns the response
            </summary>
            <param name="url">An URL</param>
            <param name="body">The Body-Data (most likely a JSON String)</param>
            <param name="method">The Upload-method (POST,DELETE,PUT)</param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.IClient.UploadJson``1(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Uploads data from an URL and converts the response to an object
            </summary>
            <typeparam name="T">The Type which the object gets converted to</typeparam>
            <param name="url">An URL</param>
            <param name="body">The Body-Data (most likely a JSON String)</param>
            <param name="method">The Upload-method (POST,DELETE,PUT)</param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.IClient.UploadJsonAsync``1(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Uploads data async from an URL and converts the response to an object
            </summary>
            <typeparam name="T">The Type which the object gets converted to</typeparam>
            <param name="url">An URL</param>
            <param name="body">The Body-Data (most likely a JSON String)</param>
            <param name="method">The Upload-method (POST,DELETE,PUT)</param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="P:SpotifyAPI.Web.Models.FullTrack.IsPlayable">
            <summary>
                Only filled when the "market"-parameter was supplied!
            </summary>
        </member>
        <member name="P:SpotifyAPI.Web.Models.FullTrack.LinkedFrom">
            <summary>
                Only filled when the "market"-parameter was supplied!
            </summary>
        </member>
        <member name="M:SpotifyAPI.Web.Models.DeleteTrackUri.#ctor(System.String,System.Int32[])">
            <summary>
                Delete-Track Wrapper
            </summary>
            <param name="uri">An Spotify-URI</param>
            <param name="positions">Optional positions</param>
        </member>
        <member name="M:SpotifyAPI.Web.Models.Token.IsExpired">
            <summary>
                Checks if the token has expired
            </summary>
            <returns></returns>
        </member>
        <member name="P:SpotifyAPI.Web.SpotifyWebAPI.TokenType">
            <summary>
                The type of the <see cref="P:SpotifyAPI.Web.SpotifyWebAPI.AccessToken"/>
            </summary>
        </member>
        <member name="P:SpotifyAPI.Web.SpotifyWebAPI.AccessToken">
            <summary>
                A valid token issued by spotify. Used only when <see cref="P:SpotifyAPI.Web.SpotifyWebAPI.UseAuth"/> is true
            </summary>
        </member>
        <member name="P:SpotifyAPI.Web.SpotifyWebAPI.UseAuth">
            <summary>
                If true, an authorization header based on <see cref="P:SpotifyAPI.Web.SpotifyWebAPI.TokenType"/> and <see cref="P:SpotifyAPI.Web.SpotifyWebAPI.AccessToken"/> will be used
            </summary>
        </member>
        <member name="P:SpotifyAPI.Web.SpotifyWebAPI.WebClient">
            <summary>
                A custom WebClient, used for Unit-Testing
            </summary>
        </member>
        <member name="P:SpotifyAPI.Web.SpotifyWebAPI.RetryAfter">
            <summary>
                Specifies after how many miliseconds should a failed request be retried.
            </summary>
        </member>
        <member name="P:SpotifyAPI.Web.SpotifyWebAPI.UseAutoRetry">
            <summary>
                Should a failed request (specified by <see cref="P:SpotifyAPI.Web.SpotifyWebAPI.RetryErrorCodes"/> be automatically retried or not.
            </summary>
        </member>
        <member name="P:SpotifyAPI.Web.SpotifyWebAPI.RetryTimes">
            <summary>
                Maximum number of tries for one failed request.
            </summary>
        </member>
        <member name="P:SpotifyAPI.Web.SpotifyWebAPI.TooManyRequestsConsumesARetry">
            <summary>
                Whether a failure of type "Too Many Requests" should use up one of the allocated retry attempts.
            </summary>
        </member>
        <member name="P:SpotifyAPI.Web.SpotifyWebAPI.RetryErrorCodes">
            <summary>
                Error codes that will trigger auto-retry if <see cref="P:SpotifyAPI.Web.SpotifyWebAPI.UseAutoRetry"/> is enabled.
            </summary>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SearchItems(System.String,SpotifyAPI.Web.Enums.SearchType,System.Int32,System.Int32,System.String)">
            <summary>
                Get Spotify catalog information about artists, albums, tracks or playlists that match a keyword string.
            </summary>
            <param name="q">The search query's keywords (and optional field filters and operators), for example q=roadhouse+blues.</param>
            <param name="type">A list of item types to search across.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first result to return. Default: 0</param>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string from_token.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SearchItemsAsync(System.String,SpotifyAPI.Web.Enums.SearchType,System.Int32,System.Int32,System.String)">
            <summary>
                Get Spotify catalog information about artists, albums, tracks or playlists that match a keyword string asynchronously.
            </summary>
            <param name="q">The search query's keywords (and optional field filters and operators), for example q=roadhouse+blues.</param>
            <param name="type">A list of item types to search across.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first result to return. Default: 0</param>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string from_token.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetAlbumTracks(System.String,System.Int32,System.Int32,System.String)">
            <summary>
                Get Spotify catalog information about an album’s tracks. Optional parameters can be used to limit the number of
                tracks returned.
            </summary>
            <param name="id">The Spotify ID for the album.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first track to return. Default: 0 (the first object).</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetAlbumTracksAsync(System.String,System.Int32,System.Int32,System.String)">
            <summary>
                Get Spotify catalog information about an album’s tracks asynchronously. Optional parameters can be used to limit the number of
                tracks returned.
            </summary>
            <param name="id">The Spotify ID for the album.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first track to return. Default: 0 (the first object).</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetAlbum(System.String,System.String)">
            <summary>
                Get Spotify catalog information for a single album.
            </summary>
            <param name="id">The Spotify ID for the album.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetAlbumAsync(System.String,System.String)">
            <summary>
                Get Spotify catalog information for a single album asynchronously.
            </summary>
            <param name="id">The Spotify ID for the album.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetSeveralAlbums(System.Collections.Generic.List{System.String},System.String)">
            <summary>
                Get Spotify catalog information for multiple albums identified by their Spotify IDs.
            </summary>
            <param name="ids">A list of the Spotify IDs for the albums. Maximum: 20 IDs.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetSeveralAlbumsAsync(System.Collections.Generic.List{System.String},System.String)">
            <summary>
                Get Spotify catalog information for multiple albums identified by their Spotify IDs asynchrously.
            </summary>
            <param name="ids">A list of the Spotify IDs for the albums. Maximum: 20 IDs.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetArtist(System.String)">
            <summary>
                Get Spotify catalog information for a single artist identified by their unique Spotify ID.
            </summary>
            <param name="id">The Spotify ID for the artist.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetArtistAsync(System.String)">
            <summary>
                Get Spotify catalog information for a single artist identified by their unique Spotify ID asynchronously.
            </summary>
            <param name="id">The Spotify ID for the artist.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetRelatedArtists(System.String)">
            <summary>
                Get Spotify catalog information about artists similar to a given artist. Similarity is based on analysis of the
                Spotify community’s listening history.
            </summary>
            <param name="id">The Spotify ID for the artist.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetRelatedArtistsAsync(System.String)">
            <summary>
                Get Spotify catalog information about artists similar to a given artist asynchronously. Similarity is based on analysis of the
                Spotify community’s listening history.
            </summary>
            <param name="id">The Spotify ID for the artist.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetArtistsTopTracks(System.String,System.String)">
            <summary>
                Get Spotify catalog information about an artist’s top tracks by country.
            </summary>
            <param name="id">The Spotify ID for the artist.</param>
            <param name="country">The country: an ISO 3166-1 alpha-2 country code.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetArtistsTopTracksAsync(System.String,System.String)">
            <summary>
                Get Spotify catalog information about an artist’s top tracks by country asynchronously.
            </summary>
            <param name="id">The Spotify ID for the artist.</param>
            <param name="country">The country: an ISO 3166-1 alpha-2 country code.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetArtistsAlbums(System.String,SpotifyAPI.Web.Enums.AlbumType,System.Int32,System.Int32,System.String)">
            <summary>
                Get Spotify catalog information about an artist’s albums. Optional parameters can be specified in the query string
                to filter and sort the response.
            </summary>
            <param name="id">The Spotify ID for the artist.</param>
            <param name="type">
                A list of keywords that will be used to filter the response. If not supplied, all album types will
                be returned
            </param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first album to return. Default: 0</param>
            <param name="market">
                An ISO 3166-1 alpha-2 country code. Supply this parameter to limit the response to one particular
                geographical market
            </param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetArtistsAlbumsAsync(System.String,SpotifyAPI.Web.Enums.AlbumType,System.Int32,System.Int32,System.String)">
            <summary>
                Get Spotify catalog information about an artist’s albums asynchronously. Optional parameters can be specified in the query string
                to filter and sort the response.
            </summary>
            <param name="id">The Spotify ID for the artist.</param>
            <param name="type">
                A list of keywords that will be used to filter the response. If not supplied, all album types will
                be returned
            </param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first album to return. Default: 0</param>
            <param name="market">
                An ISO 3166-1 alpha-2 country code. Supply this parameter to limit the response to one particular
                geographical market
            </param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetSeveralArtists(System.Collections.Generic.List{System.String})">
            <summary>
                Get Spotify catalog information for several artists based on their Spotify IDs.
            </summary>
            <param name="ids">A list of the Spotify IDs for the artists. Maximum: 50 IDs.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetSeveralArtistsAsync(System.Collections.Generic.List{System.String})">
            <summary>
                Get Spotify catalog information for several artists based on their Spotify IDs asynchronously.
            </summary>
            <param name="ids">A list of the Spotify IDs for the artists. Maximum: 50 IDs.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetFeaturedPlaylists(System.String,System.String,System.DateTime,System.Int32,System.Int32)">
            <summary>
                Get a list of Spotify featured playlists (shown, for example, on a Spotify player’s “Browse” tab).
            </summary>
            <param name="locale">
                The desired language, consisting of a lowercase ISO 639 language code and an uppercase ISO 3166-1
                alpha-2 country code, joined by an underscore.
            </param>
            <param name="country">A country: an ISO 3166-1 alpha-2 country code.</param>
            <param name="timestamp">A timestamp in ISO 8601 format</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first item to return. Default: 0</param>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetFeaturedPlaylistsAsync(System.String,System.String,System.DateTime,System.Int32,System.Int32)">
            <summary>
                Get a list of Spotify featured playlists asynchronously (shown, for example, on a Spotify player’s “Browse” tab).
            </summary>
            <param name="locale">
                The desired language, consisting of a lowercase ISO 639 language code and an uppercase ISO 3166-1
                alpha-2 country code, joined by an underscore.
            </param>
            <param name="country">A country: an ISO 3166-1 alpha-2 country code.</param>
            <param name="timestamp">A timestamp in ISO 8601 format</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first item to return. Default: 0</param>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetNewAlbumReleases(System.String,System.Int32,System.Int32)">
            <summary>
                Get a list of new album releases featured in Spotify (shown, for example, on a Spotify player’s “Browse” tab).
            </summary>
            <param name="country">A country: an ISO 3166-1 alpha-2 country code.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first item to return. Default: 0</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetNewAlbumReleasesAsync(System.String,System.Int32,System.Int32)">
            <summary>
                Get a list of new album releases featured in Spotify asynchronously (shown, for example, on a Spotify player’s “Browse” tab).
            </summary>
            <param name="country">A country: an ISO 3166-1 alpha-2 country code.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first item to return. Default: 0</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetCategories(System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Get a list of categories used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).
            </summary>
            <param name="country">
                A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want to narrow the
                list of returned categories to those relevant to a particular country
            </param>
            <param name="locale">
                The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country
                code, joined by an underscore
            </param>
            <param name="limit">The maximum number of categories to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="offset">The index of the first item to return. Default: 0 (the first object).</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetCategoriesAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Get a list of categories used to tag items in Spotify asynchronously (on, for example, the Spotify player’s “Browse” tab).
            </summary>
            <param name="country">
                A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want to narrow the
                list of returned categories to those relevant to a particular country
            </param>
            <param name="locale">
                The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country
                code, joined by an underscore
            </param>
            <param name="limit">The maximum number of categories to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="offset">The index of the first item to return. Default: 0 (the first object).</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetCategory(System.String,System.String,System.String)">
            <summary>
                Get a single category used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).
            </summary>
            <param name="categoryId">The Spotify category ID for the category.</param>
            <param name="country">
                A country: an ISO 3166-1 alpha-2 country code. Provide this parameter to ensure that the category
                exists for a particular country.
            </param>
            <param name="locale">
                The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country
                code, joined by an underscore
            </param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetCategoryAsync(System.String,System.String,System.String)">
            <summary>
                Get a single category used to tag items in Spotify asynchronously (on, for example, the Spotify player’s “Browse” tab).
            </summary>
            <param name="categoryId">The Spotify category ID for the category.</param>
            <param name="country">
                A country: an ISO 3166-1 alpha-2 country code. Provide this parameter to ensure that the category
                exists for a particular country.
            </param>
            <param name="locale">
                The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country
                code, joined by an underscore
            </param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetCategoryPlaylists(System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Get a list of Spotify playlists tagged with a particular category.
            </summary>
            <param name="categoryId">The Spotify category ID for the category.</param>
            <param name="country">A country: an ISO 3166-1 alpha-2 country code.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first item to return. Default: 0</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetCategoryPlaylistsAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Get a list of Spotify playlists tagged with a particular category asynchronously.
            </summary>
            <param name="categoryId">The Spotify category ID for the category.</param>
            <param name="country">A country: an ISO 3166-1 alpha-2 country code.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first item to return. Default: 0</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetRecommendations(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},SpotifyAPI.Web.Models.TuneableTrack,SpotifyAPI.Web.Models.TuneableTrack,SpotifyAPI.Web.Models.TuneableTrack,System.Int32,System.String)">
            <summary>
                Create a playlist-style listening experience based on seed artists, tracks and genres.
            </summary>
            <param name="artistSeed">A comma separated list of Spotify IDs for seed artists. 
            Up to 5 seed values may be provided in any combination of seed_artists, seed_tracks and seed_genres.
            </param>
            <param name="genreSeed">A comma separated list of any genres in the set of available genre seeds.
            Up to 5 seed values may be provided in any combination of seed_artists, seed_tracks and seed_genres.
            </param>
            <param name="trackSeed">A comma separated list of Spotify IDs for a seed track.
            Up to 5 seed values may be provided in any combination of seed_artists, seed_tracks and seed_genres.
            </param>
            <param name="target">Tracks with the attribute values nearest to the target values will be preferred.</param>
            <param name="min">For each tunable track attribute, a hard floor on the selected track attribute’s value can be provided</param>
            <param name="max">For each tunable track attribute, a hard ceiling on the selected track attribute’s value can be provided</param>
            <param name="limit">The target size of the list of recommended tracks. Default: 20. Minimum: 1. Maximum: 100.
            For seeds with unusually small pools or when highly restrictive filtering is applied, it may be impossible to generate the requested number of recommended tracks.
            </param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.
            Because min_*, max_* and target_* are applied to pools before relinking, the generated results may not precisely match the filters applied.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetRecommendationsAsync(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},SpotifyAPI.Web.Models.TuneableTrack,SpotifyAPI.Web.Models.TuneableTrack,SpotifyAPI.Web.Models.TuneableTrack,System.Int32,System.String)">
            <summary>
                Create a playlist-style listening experience based on seed artists, tracks and genres asynchronously.
            </summary>
            <param name="artistSeed">A comma separated list of Spotify IDs for seed artists. 
            Up to 5 seed values may be provided in any combination of seed_artists, seed_tracks and seed_genres.
            </param>
            <param name="genreSeed">A comma separated list of any genres in the set of available genre seeds.
            Up to 5 seed values may be provided in any combination of seed_artists, seed_tracks and seed_genres.
            </param>
            <param name="trackSeed">A comma separated list of Spotify IDs for a seed track.
            Up to 5 seed values may be provided in any combination of seed_artists, seed_tracks and seed_genres.
            </param>
            <param name="target">Tracks with the attribute values nearest to the target values will be preferred.</param>
            <param name="min">For each tunable track attribute, a hard floor on the selected track attribute’s value can be provided</param>
            <param name="max">For each tunable track attribute, a hard ceiling on the selected track attribute’s value can be provided</param>
            <param name="limit">The target size of the list of recommended tracks. Default: 20. Minimum: 1. Maximum: 100.
            For seeds with unusually small pools or when highly restrictive filtering is applied, it may be impossible to generate the requested number of recommended tracks.
            </param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.
            Because min_*, max_* and target_* are applied to pools before relinking, the generated results may not precisely match the filters applied.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetRecommendationSeedsGenres">
            <summary>
                Retrieve a list of available genres seed parameter values for recommendations.
            </summary>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetRecommendationSeedsGenresAsync">
            <summary>
                Retrieve a list of available genres seed parameter values for recommendations asynchronously.
            </summary>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetFollowedArtists(SpotifyAPI.Web.Enums.FollowType,System.Int32,System.String)">
            <summary>
                Get the current user’s followed artists.
            </summary>
            <param name="followType">The ID type: currently only artist is supported. </param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="after">The last artist ID retrieved from the previous request.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetFollowedArtistsAsync(SpotifyAPI.Web.Enums.FollowType,System.Int32,System.String)">
            <summary>
                Get the current user’s followed artists asynchronously.
            </summary>
            <param name="followType">The ID type: currently only artist is supported. </param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="after">The last artist ID retrieved from the previous request.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.Follow(SpotifyAPI.Web.Enums.FollowType,System.Collections.Generic.List{System.String})">
            <summary>
                Add the current user as a follower of one or more artists or other Spotify users.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="ids">A list of the artist or the user Spotify IDs</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.FollowAsync(SpotifyAPI.Web.Enums.FollowType,System.Collections.Generic.List{System.String})">
            <summary>
                Add the current user as a follower of one or more artists or other Spotify users asynchronously.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="ids">A list of the artist or the user Spotify IDs</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.Follow(SpotifyAPI.Web.Enums.FollowType,System.String)">
            <summary>
                Add the current user as a follower of one or more artists or other Spotify users.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="id">Artists or the Users Spotify ID</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.FollowAsync(SpotifyAPI.Web.Enums.FollowType,System.String)">
            <summary>
                Add the current user as a follower of one or more artists or other Spotify users asynchronously.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="id">Artists or the Users Spotify ID</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.Unfollow(SpotifyAPI.Web.Enums.FollowType,System.Collections.Generic.List{System.String})">
            <summary>
                Remove the current user as a follower of one or more artists or other Spotify users.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="ids">A list of the artist or the user Spotify IDs</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.UnfollowAsync(SpotifyAPI.Web.Enums.FollowType,System.Collections.Generic.List{System.String})">
            <summary>
                Remove the current user as a follower of one or more artists or other Spotify users asynchronously.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="ids">A list of the artist or the user Spotify IDs</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.Unfollow(SpotifyAPI.Web.Enums.FollowType,System.String)">
            <summary>
                Remove the current user as a follower of one or more artists or other Spotify users.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="id">Artists or the Users Spotify ID</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.UnfollowAsync(SpotifyAPI.Web.Enums.FollowType,System.String)">
            <summary>
                Remove the current user as a follower of one or more artists or other Spotify users asynchronously.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="id">Artists or the Users Spotify ID</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.IsFollowing(SpotifyAPI.Web.Enums.FollowType,System.Collections.Generic.List{System.String})">
            <summary>
                Check to see if the current user is following one or more artists or other Spotify users.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="ids">A list of the artist or the user Spotify IDs to check</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.IsFollowingAsync(SpotifyAPI.Web.Enums.FollowType,System.Collections.Generic.List{System.String})">
            <summary>
                Check to see if the current user is following one or more artists or other Spotify users asynchronously.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="ids">A list of the artist or the user Spotify IDs to check</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.IsFollowing(SpotifyAPI.Web.Enums.FollowType,System.String)">
            <summary>
                Check to see if the current user is following one artist or another Spotify user.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="id">Artists or the Users Spotify ID</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.IsFollowingAsync(SpotifyAPI.Web.Enums.FollowType,System.String)">
            <summary>
                Check to see if the current user is following one artist or another Spotify user asynchronously.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="id">Artists or the Users Spotify ID</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.FollowPlaylist(System.String,System.String,System.Boolean)">
            <summary>
                Add the current user as a follower of a playlist.
            </summary>
            <param name="ownerId">The Spotify user ID of the person who owns the playlist.</param>
            <param name="playlistId">
                The Spotify ID of the playlist. Any playlist can be followed, regardless of its public/private
                status, as long as you know its playlist ID.
            </param>
            <param name="showPublic">
                If true the playlist will be included in user's public playlists, if false it will remain
                private.
            </param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.FollowPlaylistAsync(System.String,System.String,System.Boolean)">
            <summary>
                Add the current user as a follower of a playlist asynchronously.
            </summary>
            <param name="ownerId">The Spotify user ID of the person who owns the playlist.</param>
            <param name="playlistId">
                The Spotify ID of the playlist. Any playlist can be followed, regardless of its public/private
                status, as long as you know its playlist ID.
            </param>
            <param name="showPublic">
                If true the playlist will be included in user's public playlists, if false it will remain
                private.
            </param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.UnfollowPlaylist(System.String,System.String)">
            <summary>
                Remove the current user as a follower of a playlist.
            </summary>
            <param name="ownerId">The Spotify user ID of the person who owns the playlist.</param>
            <param name="playlistId">The Spotify ID of the playlist that is to be no longer followed.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.UnfollowPlaylistAsync(System.String,System.String)">
            <summary>
                Remove the current user as a follower of a playlist asynchronously.
            </summary>
            <param name="ownerId">The Spotify user ID of the person who owns the playlist.</param>
            <param name="playlistId">The Spotify ID of the playlist that is to be no longer followed.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.IsFollowingPlaylist(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
                Check to see if one or more Spotify users are following a specified playlist.
            </summary>
            <param name="ownerId">The Spotify user ID of the person who owns the playlist.</param>
            <param name="playlistId">The Spotify ID of the playlist.</param>
            <param name="ids">A list of Spotify User IDs</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.IsFollowingPlaylistAsync(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
                Check to see if one or more Spotify users are following a specified playlist asynchronously.
            </summary>
            <param name="ownerId">The Spotify user ID of the person who owns the playlist.</param>
            <param name="playlistId">The Spotify ID of the playlist.</param>
            <param name="ids">A list of Spotify User IDs</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.IsFollowingPlaylist(System.String,System.String,System.String)">
            <summary>
                Check to see if one or more Spotify users are following a specified playlist.
            </summary>
            <param name="ownerId">The Spotify user ID of the person who owns the playlist.</param>
            <param name="playlistId">The Spotify ID of the playlist.</param>
            <param name="id">A Spotify User ID</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.IsFollowingPlaylistAsync(System.String,System.String,System.String)">
            <summary>
                Check to see if one or more Spotify users are following a specified playlist asynchronously.
            </summary>
            <param name="ownerId">The Spotify user ID of the person who owns the playlist.</param>
            <param name="playlistId">The Spotify ID of the playlist.</param>
            <param name="id">A Spotify User ID</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SaveTracks(System.Collections.Generic.List{System.String})">
            <summary>
                Save one or more tracks to the current user’s “Your Music” library.
            </summary>
            <param name="ids">A list of the Spotify IDs</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SaveTracksAsync(System.Collections.Generic.List{System.String})">
            <summary>
                Save one or more tracks to the current user’s “Your Music” library asynchronously.
            </summary>
            <param name="ids">A list of the Spotify IDs</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SaveTrack(System.String)">
            <summary>
                Save one track to the current user’s “Your Music” library.
            </summary>
            <param name="id">A Spotify ID</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SaveTrackAsync(System.String)">
            <summary>
                Save one track to the current user’s “Your Music” library asynchronously.
            </summary>
            <param name="id">A Spotify ID</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetSavedTracks(System.Int32,System.Int32,System.String)">
            <summary>
                Get a list of the songs saved in the current Spotify user’s “Your Music” library.
            </summary>
            <param name="limit">The maximum number of objects to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first object to return. Default: 0 (i.e., the first object)</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetSavedTracksAsync(System.Int32,System.Int32,System.String)">
            <summary>
                Get a list of the songs saved in the current Spotify user’s “Your Music” library asynchronously.
            </summary>
            <param name="limit">The maximum number of objects to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first object to return. Default: 0 (i.e., the first object)</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.RemoveSavedTracks(System.Collections.Generic.List{System.String})">
            <summary>
                Remove one or more tracks from the current user’s “Your Music” library.
            </summary>
            <param name="ids">A list of the Spotify IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.RemoveSavedTracksAsync(System.Collections.Generic.List{System.String})">
            <summary>
                Remove one or more tracks from the current user’s “Your Music” library asynchronously.
            </summary>
            <param name="ids">A list of the Spotify IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.CheckSavedTracks(System.Collections.Generic.List{System.String})">
            <summary>
                Check if one or more tracks is already saved in the current Spotify user’s “Your Music” library.
            </summary>
            <param name="ids">A list of the Spotify IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.CheckSavedTracksAsync(System.Collections.Generic.List{System.String})">
            <summary>
                Check if one or more tracks is already saved in the current Spotify user’s “Your Music” library asynchronously.
            </summary>
            <param name="ids">A list of the Spotify IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SaveAlbums(System.Collections.Generic.List{System.String})">
            <summary>
                Save one or more albums to the current user’s “Your Music” library.
            </summary>
            <param name="ids">A list of the Spotify IDs</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SaveAlbumsAsync(System.Collections.Generic.List{System.String})">
            <summary>
                Save one or more albums to the current user’s “Your Music” library asynchronously.
            </summary>
            <param name="ids">A list of the Spotify IDs</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SaveAlbum(System.String)">
            <summary>
                Save one album to the current user’s “Your Music” library.
            </summary>
            <param name="id">A Spotify ID</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SaveAlbumAsync(System.String)">
            <summary>
                Save one album to the current user’s “Your Music” library asynchronously.
            </summary>
            <param name="id">A Spotify ID</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetSavedAlbums(System.Int32,System.Int32,System.String)">
            <summary>
                Get a list of the albums saved in the current Spotify user’s “Your Music” library.
            </summary>
            <param name="limit">The maximum number of objects to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first object to return. Default: 0 (i.e., the first object)</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetSavedAlbumsAsync(System.Int32,System.Int32,System.String)">
            <summary>
                Get a list of the albums saved in the current Spotify user’s “Your Music” library asynchronously.
            </summary>
            <param name="limit">The maximum number of objects to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first object to return. Default: 0 (i.e., the first object)</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.RemoveSavedAlbums(System.Collections.Generic.List{System.String})">
            <summary>
                Remove one or more albums from the current user’s “Your Music” library.
            </summary>
            <param name="ids">A list of the Spotify IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.RemoveSavedAlbumsAsync(System.Collections.Generic.List{System.String})">
            <summary>
                Remove one or more albums from the current user’s “Your Music” library asynchronously.
            </summary>
            <param name="ids">A list of the Spotify IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.CheckSavedAlbums(System.Collections.Generic.List{System.String})">
            <summary>
                Check if one or more albums is already saved in the current Spotify user’s “Your Music” library.
            </summary>
            <param name="ids">A list of the Spotify IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.CheckSavedAlbumsAsync(System.Collections.Generic.List{System.String})">
            <summary>
                Check if one or more albums is already saved in the current Spotify user’s “Your Music” library asynchronously.
            </summary>
            <param name="ids">A list of the Spotify IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetUsersTopTracks(SpotifyAPI.Web.Enums.TimeRangeType,System.Int32,System.Int32)">
            <summary>
                Get the current user’s top tracks based on calculated affinity.
            </summary>
            <param name="timeRange">Over what time frame the affinities are computed. 
            Valid values: long_term (calculated from several years of data and including all new data as it becomes available), 
            medium_term (approximately last 6 months), short_term (approximately last 4 weeks). </param>
            <param name="limit">The number of entities to return. Default: 20. Minimum: 1. Maximum: 50</param>
            <param name="offest">The index of the first entity to return. Default: 0 (i.e., the first track). Use with limit to get the next set of entities.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetUsersTopTracksAsync(SpotifyAPI.Web.Enums.TimeRangeType,System.Int32,System.Int32)">
            <summary>
                Get the current user’s top tracks based on calculated affinity asynchronously.
            </summary>
            <param name="timeRange">Over what time frame the affinities are computed. 
            Valid values: long_term (calculated from several years of data and including all new data as it becomes available), 
            medium_term (approximately last 6 months), short_term (approximately last 4 weeks). </param>
            <param name="limit">The number of entities to return. Default: 20. Minimum: 1. Maximum: 50</param>
            <param name="offest">The index of the first entity to return. Default: 0 (i.e., the first track). Use with limit to get the next set of entities.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetUsersTopArtists(SpotifyAPI.Web.Enums.TimeRangeType,System.Int32,System.Int32)">
            <summary>
                Get the current user’s top artists based on calculated affinity.
            </summary>
            <param name="timeRange">Over what time frame the affinities are computed. 
            Valid values: long_term (calculated from several years of data and including all new data as it becomes available), 
            medium_term (approximately last 6 months), short_term (approximately last 4 weeks). </param>
            <param name="limit">The number of entities to return. Default: 20. Minimum: 1. Maximum: 50</param>
            <param name="offest">The index of the first entity to return. Default: 0 (i.e., the first track). Use with limit to get the next set of entities.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetUsersTopArtistsAsync(SpotifyAPI.Web.Enums.TimeRangeType,System.Int32,System.Int32)">
            <summary>
                Get the current user’s top artists based on calculated affinity asynchronously.
            </summary>
            <param name="timeRange">Over what time frame the affinities are computed. 
            Valid values: long_term (calculated from several years of data and including all new data as it becomes available), 
            medium_term (approximately last 6 months), short_term (approximately last 4 weeks). </param>
            <param name="limit">The number of entities to return. Default: 20. Minimum: 1. Maximum: 50</param>
            <param name="offest">The index of the first entity to return. Default: 0 (i.e., the first track). Use with limit to get the next set of entities.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetUsersRecentlyPlayedTracks(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
                Get tracks from the current user’s recent play history.
            </summary>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="after">A Unix timestamp in milliseconds. Returns all items after (but not including) this cursor position. If after is specified, before must not be specified.</param>
            <param name="before">A Unix timestamp in milliseconds. Returns all items before (but not including) this cursor position. If before is specified, after must not be specified.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetUsersRecentlyPlayedTracksAsync(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
                Get tracks from the current user’s recent play history asynchronously
            </summary>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="after">A Unix timestamp in milliseconds. Returns all items after (but not including) this cursor position. If after is specified, before must not be specified.</param>
            <param name="before">A Unix timestamp in milliseconds. Returns all items before (but not including) this cursor position. If before is specified, after must not be specified.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetUserPlaylists(System.String,System.Int32,System.Int32)">
            <summary>
                Get a list of the playlists owned or followed by a Spotify user.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="limit">The maximum number of playlists to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="offset">The index of the first playlist to return. Default: 0 (the first object)</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetUserPlaylistsAsync(System.String,System.Int32,System.Int32)">
            <summary>
                Get a list of the playlists owned or followed by a Spotify user asynchronously.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="limit">The maximum number of playlists to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="offset">The index of the first playlist to return. Default: 0 (the first object)</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetPlaylist(System.String,System.String,System.String,System.String)">
            <summary>
                Get a playlist owned by a Spotify user.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="fields">
                Filters for the query: a comma-separated list of the fields to return. If omitted, all fields are
                returned.
            </param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetPlaylistAsync(System.String,System.String,System.String,System.String)">
            <summary>
                Get a playlist owned by a Spotify user asynchronously.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="fields">
                Filters for the query: a comma-separated list of the fields to return. If omitted, all fields are
                returned.
            </param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetPlaylistTracks(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
                Get full details of the tracks of a playlist owned by a Spotify user.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="fields">
                Filters for the query: a comma-separated list of the fields to return. If omitted, all fields are
                returned.
            </param>
            <param name="limit">The maximum number of tracks to return. Default: 100. Minimum: 1. Maximum: 100.</param>
            <param name="offset">The index of the first object to return. Default: 0 (i.e., the first object)</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetPlaylistTracksAsync(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
                Get full details of the tracks of a playlist owned by a Spotify user asyncronously.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="fields">
                Filters for the query: a comma-separated list of the fields to return. If omitted, all fields are
                returned.
            </param>
            <param name="limit">The maximum number of tracks to return. Default: 100. Minimum: 1. Maximum: 100.</param>
            <param name="offset">The index of the first object to return. Default: 0 (i.e., the first object)</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.CreatePlaylist(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
                Create a playlist for a Spotify user. (The playlist will be empty until you add tracks.)
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistName">
                The name for the new playlist, for example "Your Coolest Playlist". This name does not need
                to be unique.
            </param>
            <param name="isPublic">
                default true. If true the playlist will be public, if false it will be private. To be able to
                create private playlists, the user must have granted the playlist-modify-private scope.
            </param>
            <param name="isCollaborative">If true the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client.
            Note: You can only set collaborative to true on non-public playlists.</param>
            <param name="playlistDescription">Value for playlist description as displayed in Spotify Clients and in the Web API.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.CreatePlaylistAsync(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
                Create a playlist for a Spotify user asynchronously. (The playlist will be empty until you add tracks.)
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistName">
                The name for the new playlist, for example "Your Coolest Playlist". This name does not need
                to be unique.
            </param>
            <param name="isPublic">
                default true. If true the playlist will be public, if false it will be private. To be able to
                create private playlists, the user must have granted the playlist-modify-private scope.
            </param>
            <param name="isCollaborative">If true the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client.
            Note: You can only set collaborative to true on non-public playlists.</param>
            <param name="playlistDescription">Value for playlist description as displayed in Spotify Clients and in the Web API.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.UpdatePlaylist(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
                Change a playlist’s name and public/private state. (The user must, of course, own the playlist.)
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="newName">The new name for the playlist, for example "My New Playlist Title".</param>
            <param name="newPublic">If true the playlist will be public, if false it will be private.</param>
            <param name="newCollaborative">If true the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client.
            Note: You can only set collaborative to true on non-public playlists.</param>
            <param name="newDescription">Value for playlist description as displayed in Spotify Clients and in the Web API.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.UpdatePlaylistAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
                Change a playlist’s name and public/private state asynchronously. (The user must, of course, own the playlist.)
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="newName">The new name for the playlist, for example "My New Playlist Title".</param>
            <param name="newPublic">If true the playlist will be public, if false it will be private.</param>
            <param name="newCollaborative">If true the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client. Note: You can only set collaborative to true on non-public playlists.</param>
            <param name="newDescription">Value for playlist description as displayed in Spotify Clients and in the Web API.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.ReplacePlaylistTracks(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
                Replace all the tracks in a playlist, overwriting its existing tracks. This powerful request can be useful for
                replacing tracks, re-ordering existing tracks, or clearing the playlist.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="uris">A list of Spotify track URIs to set. A maximum of 100 tracks can be set in one request.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.ReplacePlaylistTracksAsync(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
                Replace all the tracks in a playlist asynchronously, overwriting its existing tracks. This powerful request can be useful for
                replacing tracks, re-ordering existing tracks, or clearing the playlist.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="uris">A list of Spotify track URIs to set. A maximum of 100 tracks can be set in one request.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.RemovePlaylistTracks(System.String,System.String,System.Collections.Generic.List{SpotifyAPI.Web.Models.DeleteTrackUri})">
            <summary>
                Remove one or more tracks from a user’s playlist.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="uris">
                array of objects containing Spotify URI strings (and their position in the playlist). A maximum of
                100 objects can be sent at once.
            </param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.RemovePlaylistTracksAsync(System.String,System.String,System.Collections.Generic.List{SpotifyAPI.Web.Models.DeleteTrackUri})">
            <summary>
                Remove one or more tracks from a user’s playlist asynchronously.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="uris">
                array of objects containing Spotify URI strings (and their position in the playlist). A maximum of
                100 objects can be sent at once.
            </param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.RemovePlaylistTrack(System.String,System.String,SpotifyAPI.Web.Models.DeleteTrackUri)">
            <summary>
                Remove a track from a user’s playlist.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="uri">Spotify URI</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.RemovePlaylistTrackAsync(System.String,System.String,SpotifyAPI.Web.Models.DeleteTrackUri)">
            <summary>
                Remove a track from a user’s playlist asynchronously.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="uri">Spotify URI</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.AddPlaylistTracks(System.String,System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32})">
            <summary>
                Add one or more tracks to a user’s playlist.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="uris">A list of Spotify track URIs to add</param>
            <param name="position">The position to insert the tracks, a zero-based index</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.AddPlaylistTracksAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32})">
            <summary>
                Add one or more tracks to a user’s playlist asynchronously.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="uris">A list of Spotify track URIs to add</param>
            <param name="position">The position to insert the tracks, a zero-based index</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.AddPlaylistTrack(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
                Add a track to a user’s playlist.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="uri">A Spotify Track URI</param>
            <param name="position">The position to insert the tracks, a zero-based index</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.AddPlaylistTrackAsync(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
                Add a track to a user’s playlist asynchronously.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="uri">A Spotify Track URI</param>
            <param name="position">The position to insert the tracks, a zero-based index</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.ReorderPlaylist(System.String,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
                Reorder a track or a group of tracks in a playlist.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="rangeStart">The position of the first track to be reordered.</param>
            <param name="insertBefore">The position where the tracks should be inserted. </param>
            <param name="rangeLength">The amount of tracks to be reordered. Defaults to 1 if not set.</param>
            <param name="snapshotId">The playlist's snapshot ID against which you want to make the changes.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.ReorderPlaylistAsync(System.String,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
                Reorder a track or a group of tracks in a playlist asynchronously.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="rangeStart">The position of the first track to be reordered.</param>
            <param name="insertBefore">The position where the tracks should be inserted. </param>
            <param name="rangeLength">The amount of tracks to be reordered. Defaults to 1 if not set.</param>
            <param name="snapshotId">The playlist's snapshot ID against which you want to make the changes.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetPrivateProfile">
            <summary>
                Get detailed profile information about the current user (including the current user’s username).
            </summary>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetPrivateProfileAsync">
            <summary>
                Get detailed profile information about the current user asynchronously (including the current user’s username).
            </summary>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetPublicProfile(System.String)">
            <summary>
                Get public profile information about a Spotify user.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetPublicProfileAsync(System.String)">
            <summary>
                Get public profile information about a Spotify user asynchronously.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetSeveralTracks(System.Collections.Generic.List{System.String},System.String)">
            <summary>
                Get Spotify catalog information for multiple tracks based on their Spotify IDs.
            </summary>
            <param name="ids">A list of the Spotify IDs for the tracks. Maximum: 50 IDs.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetSeveralTracksAsync(System.Collections.Generic.List{System.String},System.String)">
            <summary>
                Get Spotify catalog information for multiple tracks based on their Spotify IDs asynchronously.
            </summary>
            <param name="ids">A list of the Spotify IDs for the tracks. Maximum: 50 IDs.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetTrack(System.String,System.String)">
            <summary>
                Get Spotify catalog information for a single track identified by its unique Spotify ID.
            </summary>
            <param name="id">The Spotify ID for the track.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetTrackAsync(System.String,System.String)">
            <summary>
                Get Spotify catalog information for a single track identified by its unique Spotify ID asynchronously.
            </summary>
            <param name="id">The Spotify ID for the track.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetAudioAnalysis(System.String)">
            <summary>
                Get a detailed audio analysis for a single track identified by its unique Spotify ID.
            </summary>
            <param name="id">The Spotify ID for the track.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetAudioAnalysisAsync(System.String)">
            <summary>
                Get a detailed audio analysis for a single track identified by its unique Spotify ID asynchronously.
            </summary>
            <param name="id">The Spotify ID for the track.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetAudioFeatures(System.String)">
            <summary>
                Get audio feature information for a single track identified by its unique Spotify ID.
            </summary>
            <param name="id">The Spotify ID for the track.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetAudioFeaturesAsync(System.String)">
            <summary>
                Get audio feature information for a single track identified by its unique Spotify ID asynchronously.
            </summary>
            <param name="id">The Spotify ID for the track.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetSeveralAudioFeatures(System.Collections.Generic.List{System.String})">
            <summary>
                Get audio features for multiple tracks based on their Spotify IDs.
            </summary>
            <param name="ids">A list of Spotify Track-IDs. Maximum: 100 IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetSeveralAudioFeaturesAsync(System.Collections.Generic.List{System.String})">
            <summary>
                Get audio features for multiple tracks based on their Spotify IDs asynchronously.
            </summary>
            <param name="ids">A list of Spotify Track-IDs. Maximum: 100 IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetDevices">
            <summary>
                Get information about a user’s available devices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetDevicesAsync">
            <summary>
                Get information about a user’s available devices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetPlayback(System.String)">
            <summary>
                Get information about the user’s current playback state, including track, track progress, and active device.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetPlaybackAsync(System.String)">
            <summary>
                Get information about the user’s current playback state, including track, track progress, and active device.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetPlayingTrack(System.String)">
            <summary>
                Get the object currently being played on the user’s Spotify account.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetPlayingTrackAsync(System.String)">
            <summary>
                Get the object currently being played on the user’s Spotify account.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.TransferPlayback(System.String,System.Boolean)">
            <summary>
                Transfer playback to a new device and determine if it should start playing.
            </summary>
            <param name="deviceId">ID of the device on which playback should be started/transferred to</param>
            <param name="play">
            true: ensure playback happens on new device.
            false or not provided: keep the current playback state.
            </param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.TransferPlaybackAsync(System.String,System.Boolean)">
            <summary>
                Transfer playback to a new device and determine if it should start playing.
            </summary>
            <param name="deviceId">ID of the device on which playback should be started/transferred to</param>
            <param name="play">
            true: ensure playback happens on new device.
            false or not provided: keep the current playback state.
            </param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.TransferPlayback(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
                Transfer playback to a new device and determine if it should start playing. 
                NOTE: Although an array is accepted, only a single device_id is currently supported. Supplying more than one will return 400 Bad Request
            </summary>
            <param name="deviceIds">A array containing the ID of the device on which playback should be started/transferred.</param>
            <param name="play">
            true: ensure playback happens on new device.
            false or not provided: keep the current playback state.
            </param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.TransferPlaybackAsync(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
                Transfer playback to a new device and determine if it should start playing. 
                NOTE: Although an array is accepted, only a single device_id is currently supported. Supplying more than one will return 400 Bad Request
            </summary>
            <param name="deviceIds">A array containing the ID of the device on which playback should be started/transferred.</param>
            <param name="play">
            true: ensure playback happens on new device.
            false or not provided: keep the current playback state.
            </param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.ResumePlayback(System.String,System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Int32)">
            <summary>
                Start a new context or resume current playback on the user’s active device.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <param name="contextUri">Spotify URI of the context to play.</param>
            <param name="uris">A JSON array of the Spotify track URIs to play.</param>
            <param name="offset">Indicates from where in the context playback should start.
            <param name="positionMs">The starting time to seek the track to</param>
            Only available when context_uri corresponds to an album or playlist object, or when the uris parameter is used.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.ResumePlaybackAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Int32)">
            <summary>
                Start a new context or resume current playback on the user’s active device.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <param name="contextUri">Spotify URI of the context to play.</param>
            <param name="uris">A JSON array of the Spotify track URIs to play.</param>
            <param name="offset">Indicates from where in the context playback should start.
            <param name="positionMs">The starting time to seek the track to</param>
            Only available when context_uri corresponds to an album or playlist object, or when the uris parameter is used.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.ResumePlayback(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Int32)">
            <summary>
                Start a new context or resume current playback on the user’s active device.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <param name="contextUri">Spotify URI of the context to play.</param>
            <param name="uris">A JSON array of the Spotify track URIs to play.</param>
            <param name="offset">Indicates from where in the context playback should start.
            <param name="positionMs">The starting time to seek the track to</param>
            Only available when context_uri corresponds to an album or playlist object, or when the uris parameter is used.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.ResumePlaybackAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Int32)">
            <summary>
                Start a new context or resume current playback on the user’s active device.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <param name="contextUri">Spotify URI of the context to play.</param>
            <param name="uris">A JSON array of the Spotify track URIs to play.</param>
            <param name="offset">Indicates from where in the context playback should start.
            <param name="positionMs">The starting time to seek the track to</param>
            Only available when context_uri corresponds to an album or playlist object, or when the uris parameter is used.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.PausePlayback(System.String)">
            <summary>
                Pause playback on the user’s account.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.PausePlaybackAsync(System.String)">
            <summary>
                Pause playback on the user’s account.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SkipPlaybackToNext(System.String)">
            <summary>
                Skips to next track in the user’s queue.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SkipPlaybackToNextAsync(System.String)">
            <summary>
                Skips to next track in the user’s queue.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SkipPlaybackToPrevious(System.String)">
            <summary>
                Skips to previous track in the user’s queue.
                Note that this will ALWAYS skip to the previous track, regardless of the current track’s progress.
                Returning to the start of the current track should be performed using the https://api.spotify.com/v1/me/player/seek endpoint.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SkipPlaybackToPreviousAsync(System.String)">
            <summary>
                Skips to previous track in the user’s queue.
                Note that this will ALWAYS skip to the previous track, regardless of the current track’s progress.
                Returning to the start of the current track should be performed using the https://api.spotify.com/v1/me/player/seek endpoint.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SeekPlayback(System.Int32,System.String)">
            <summary>
                Seeks to the given position in the user’s currently playing track.
            </summary>
            <param name="positionMs">The position in milliseconds to seek to. Must be a positive number. 
            Passing in a position that is greater than the length of the track will cause the player to start playing the next song.</param>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SeekPlaybackAsync(System.Int32,System.String)">
            <summary>
                Seeks to the given position in the user’s currently playing track.
            </summary>
            <param name="positionMs">The position in milliseconds to seek to. Must be a positive number. 
            Passing in a position that is greater than the length of the track will cause the player to start playing the next song.</param>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SetRepeatMode(SpotifyAPI.Web.Enums.RepeatState,System.String)">
            <summary>
                Set the repeat mode for the user’s playback. Options are repeat-track, repeat-context, and off.
            </summary>
            <param name="state">track, context or off. </param>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SetRepeatModeAsync(SpotifyAPI.Web.Enums.RepeatState,System.String)">
            <summary>
                Set the repeat mode for the user’s playback. Options are repeat-track, repeat-context, and off.
            </summary>
            <param name="state">track, context or off. </param>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SetVolume(System.Int32,System.String)">
            <summary>
                Set the volume for the user’s current playback device.
            </summary>
            <param name="volumePercent">Integer. The volume to set. Must be a value from 0 to 100 inclusive.</param>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SetVolumeAsync(System.Int32,System.String)">
            <summary>
                Set the volume for the user’s current playback device.
            </summary>
            <param name="volumePercent">Integer. The volume to set. Must be a value from 0 to 100 inclusive.</param>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SetShuffle(System.Boolean,System.String)">
            <summary>
                Toggle shuffle on or off for user’s playback.
            </summary>
            <param name="shuffle">True or False</param>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.SetShuffleAsync(System.Boolean,System.String)">
            <summary>
                Toggle shuffle on or off for user’s playback.
            </summary>
            <param name="shuffle">True or False</param>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebAPI.GetTooManyRequests(SpotifyAPI.Web.Models.ResponseInfo)">
            <summary>
                Retrieves whether request had a "TooManyRequests" error, and get the amount Spotify recommends waiting before another request.
            </summary>
            <param name="info">Info object to analyze.</param>
            <returns>Seconds to wait before making another request.  -1 if no error.</returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="T:SpotifyAPI.Web.SpotifyWebBuilder">
            <summary>
            SpotifyAPI URL-Generator
            </summary>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.SearchItems(System.String,SpotifyAPI.Web.Enums.SearchType,System.Int32,System.Int32,System.String)">
            <summary>
                Get Spotify catalog information about artists, albums, tracks or playlists that match a keyword string.
            </summary>
            <param name="q">The search query's keywords (and optional field filters and operators), for example q=roadhouse+blues.</param>
            <param name="type">A list of item types to search across.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first result to return. Default: 0</param>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string from_token.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetAlbumTracks(System.String,System.Int32,System.Int32,System.String)">
            <summary>
                Get Spotify catalog information about an album’s tracks. Optional parameters can be used to limit the number of
                tracks returned.
            </summary>
            <param name="id">The Spotify ID for the album.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first track to return. Default: 0 (the first object).</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetAlbum(System.String,System.String)">
            <summary>
                Get Spotify catalog information for a single album.
            </summary>
            <param name="id">The Spotify ID for the album.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetSeveralAlbums(System.Collections.Generic.List{System.String},System.String)">
            <summary>
                Get Spotify catalog information for multiple albums identified by their Spotify IDs.
            </summary>
            <param name="ids">A list of the Spotify IDs for the albums. Maximum: 20 IDs.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetArtist(System.String)">
            <summary>
                Get Spotify catalog information for a single artist identified by their unique Spotify ID.
            </summary>
            <param name="id">The Spotify ID for the artist.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetRelatedArtists(System.String)">
            <summary>
                Get Spotify catalog information about artists similar to a given artist. Similarity is based on analysis of the
                Spotify community’s listening history.
            </summary>
            <param name="id">The Spotify ID for the artist.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetArtistsTopTracks(System.String,System.String)">
            <summary>
                Get Spotify catalog information about an artist’s top tracks by country.
            </summary>
            <param name="id">The Spotify ID for the artist.</param>
            <param name="country">The country: an ISO 3166-1 alpha-2 country code.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetArtistsAlbums(System.String,SpotifyAPI.Web.Enums.AlbumType,System.Int32,System.Int32,System.String)">
            <summary>
                Get Spotify catalog information about an artist’s albums. Optional parameters can be specified in the query string
                to filter and sort the response.
            </summary>
            <param name="id">The Spotify ID for the artist.</param>
            <param name="type">
                A list of keywords that will be used to filter the response. If not supplied, all album types will
                be returned
            </param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first album to return. Default: 0</param>
            <param name="market">
                An ISO 3166-1 alpha-2 country code. Supply this parameter to limit the response to one particular
                geographical market
            </param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetSeveralArtists(System.Collections.Generic.List{System.String})">
            <summary>
                Get Spotify catalog information for several artists based on their Spotify IDs.
            </summary>
            <param name="ids">A list of the Spotify IDs for the artists. Maximum: 50 IDs.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetFeaturedPlaylists(System.String,System.String,System.DateTime,System.Int32,System.Int32)">
            <summary>
                Get a list of Spotify featured playlists (shown, for example, on a Spotify player’s “Browse” tab).
            </summary>
            <param name="locale">
                The desired language, consisting of a lowercase ISO 639 language code and an uppercase ISO 3166-1
                alpha-2 country code, joined by an underscore.
            </param>
            <param name="country">A country: an ISO 3166-1 alpha-2 country code.</param>
            <param name="timestamp">A timestamp in ISO 8601 format</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first item to return. Default: 0</param>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetNewAlbumReleases(System.String,System.Int32,System.Int32)">
            <summary>
                Get a list of new album releases featured in Spotify (shown, for example, on a Spotify player’s “Browse” tab).
            </summary>
            <param name="country">A country: an ISO 3166-1 alpha-2 country code.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first item to return. Default: 0</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetCategories(System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Get a list of categories used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).
            </summary>
            <param name="country">
                A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want to narrow the
                list of returned categories to those relevant to a particular country
            </param>
            <param name="locale">
                The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country
                code, joined by an underscore
            </param>
            <param name="limit">The maximum number of categories to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="offset">The index of the first item to return. Default: 0 (the first object).</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetCategory(System.String,System.String,System.String)">
            <summary>
                Get a single category used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).
            </summary>
            <param name="categoryId">The Spotify category ID for the category.</param>
            <param name="country">
                A country: an ISO 3166-1 alpha-2 country code. Provide this parameter to ensure that the category
                exists for a particular country.
            </param>
            <param name="locale">
                The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country
                code, joined by an underscore
            </param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetCategoryPlaylists(System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Get a list of Spotify playlists tagged with a particular category.
            </summary>
            <param name="categoryId">The Spotify category ID for the category.</param>
            <param name="country">A country: an ISO 3166-1 alpha-2 country code.</param>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first item to return. Default: 0</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetRecommendations(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},SpotifyAPI.Web.Models.TuneableTrack,SpotifyAPI.Web.Models.TuneableTrack,SpotifyAPI.Web.Models.TuneableTrack,System.Int32,System.String)">
            <summary>
                Create a playlist-style listening experience based on seed artists, tracks and genres.
            </summary>
            <param name="artistSeed">A comma separated list of Spotify IDs for seed artists. 
            Up to 5 seed values may be provided in any combination of seed_artists, seed_tracks and seed_genres.
            </param>
            <param name="genreSeed">A comma separated list of any genres in the set of available genre seeds.
            Up to 5 seed values may be provided in any combination of seed_artists, seed_tracks and seed_genres.
            </param>
            <param name="trackSeed">A comma separated list of Spotify IDs for a seed track.
            Up to 5 seed values may be provided in any combination of seed_artists, seed_tracks and seed_genres.
            </param>
            <param name="target">Tracks with the attribute values nearest to the target values will be preferred.</param>
            <param name="min">For each tunable track attribute, a hard floor on the selected track attribute’s value can be provided</param>
            <param name="max">For each tunable track attribute, a hard ceiling on the selected track attribute’s value can be provided</param>
            <param name="limit">The target size of the list of recommended tracks. Default: 20. Minimum: 1. Maximum: 100.
            For seeds with unusually small pools or when highly restrictive filtering is applied, it may be impossible to generate the requested number of recommended tracks.
            </param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.
            Because min_*, max_* and target_* are applied to pools before relinking, the generated results may not precisely match the filters applied.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetRecommendationSeedsGenres">
            <summary>
                Retrieve a list of available genres seed parameter values for recommendations.
            </summary>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetFollowedArtists(System.Int32,System.String)">
            <summary>
                Get the current user’s followed artists.
            </summary>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="after">The last artist ID retrieved from the previous request.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.Follow(SpotifyAPI.Web.Enums.FollowType)">
            <summary>
                Add the current user as a follower of one or more artists or other Spotify users.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.Unfollow(SpotifyAPI.Web.Enums.FollowType)">
            <summary>
                Remove the current user as a follower of one or more artists or other Spotify users.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.IsFollowing(SpotifyAPI.Web.Enums.FollowType,System.Collections.Generic.List{System.String})">
            <summary>
                Check to see if the current user is following one or more artists or other Spotify users.
            </summary>
            <param name="followType">The ID type: either artist or user.</param>
            <param name="ids">A list of the artist or the user Spotify IDs to check</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.FollowPlaylist(System.String,System.String,System.Boolean)">
            <summary>
                Add the current user as a follower of a playlist.
            </summary>
            <param name="ownerId">The Spotify user ID of the person who owns the playlist.</param>
            <param name="playlistId">
                The Spotify ID of the playlist. Any playlist can be followed, regardless of its public/private
                status, as long as you know its playlist ID.
            </param>
            <param name="showPublic">
                If true the playlist will be included in user's public playlists, if false it will remain
                private.
            </param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.UnfollowPlaylist(System.String,System.String)">
            <summary>
                Remove the current user as a follower of a playlist.
            </summary>
            <param name="ownerId">The Spotify user ID of the person who owns the playlist.</param>
            <param name="playlistId">The Spotify ID of the playlist that is to be no longer followed.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.IsFollowingPlaylist(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
                Check to see if one or more Spotify users are following a specified playlist.
            </summary>
            <param name="ownerId">The Spotify user ID of the person who owns the playlist.</param>
            <param name="playlistId">The Spotify ID of the playlist.</param>
            <param name="ids">A list of Spotify User IDs</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.SaveTracks">
            <summary>
                Save one or more tracks to the current user’s “Your Music” library.
            </summary>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetSavedTracks(System.Int32,System.Int32,System.String)">
            <summary>
                Get a list of the songs saved in the current Spotify user’s “Your Music” library.
            </summary>
            <param name="limit">The maximum number of objects to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first object to return. Default: 0 (i.e., the first object)</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.RemoveSavedTracks">
            <summary>
                Remove one or more tracks from the current user’s “Your Music” library.
            </summary>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.CheckSavedTracks(System.Collections.Generic.List{System.String})">
            <summary>
                Check if one or more tracks is already saved in the current Spotify user’s “Your Music” library.
            </summary>
            <param name="ids">A list of the Spotify IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.SaveAlbums">
            <summary>
                Save one or more albums to the current user’s "Your Music" library.
            </summary>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetSavedAlbums(System.Int32,System.Int32,System.String)">
            <summary>
                Get a list of the albums saved in the current Spotify user’s "Your Music" library.
            </summary>
            <param name="limit">The maximum number of objects to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first object to return. Default: 0 (i.e., the first object)</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.RemoveSavedAlbums">
            <summary>
                Remove one or more albums from the current user’s "Your Music" library.
            </summary>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.CheckSavedAlbums(System.Collections.Generic.List{System.String})">
            <summary>
                Check if one or more albums is already saved in the current Spotify user’s "Your Music" library.
            </summary>
            <param name="ids">A list of the Spotify IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetUsersTopTracks(SpotifyAPI.Web.Enums.TimeRangeType,System.Int32,System.Int32)">
            <summary>
                Get the current user’s top tracks based on calculated affinity.
            </summary>
            <param name="timeRange">Over what time frame the affinities are computed. 
            Valid values: long_term (calculated from several years of data and including all new data as it becomes available), 
            medium_term (approximately last 6 months), short_term (approximately last 4 weeks). </param>
            <param name="limit">The number of entities to return. Default: 20. Minimum: 1. Maximum: 50</param>
            <param name="offest">The index of the first entity to return. Default: 0 (i.e., the first track). Use with limit to get the next set of entities.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetUsersTopArtists(SpotifyAPI.Web.Enums.TimeRangeType,System.Int32,System.Int32)">
            <summary>
                Get the current user’s top artists based on calculated affinity.
            </summary>
            <param name="timeRange">Over what time frame the affinities are computed. 
            Valid values: long_term (calculated from several years of data and including all new data as it becomes available), 
            medium_term (approximately last 6 months), short_term (approximately last 4 weeks). </param>
            <param name="limit">The number of entities to return. Default: 20. Minimum: 1. Maximum: 50</param>
            <param name="offest">The index of the first entity to return. Default: 0 (i.e., the first track). Use with limit to get the next set of entities.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetUsersRecentlyPlayedTracks(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
                Get tracks from the current user’s recent play history.
            </summary>
            <param name="limit">The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="after">A Unix timestamp in milliseconds. Returns all items after (but not including) this cursor position. If after is specified, before must not be specified.</param>
            <param name="before">A Unix timestamp in milliseconds. Returns all items before (but not including) this cursor position. If before is specified, after must not be specified.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetUserPlaylists(System.String,System.Int32,System.Int32)">
            <summary>
                Get a list of the playlists owned or followed by a Spotify user.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="limit">The maximum number of playlists to return. Default: 20. Minimum: 1. Maximum: 50. </param>
            <param name="offset">The index of the first playlist to return. Default: 0 (the first object)</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetPlaylist(System.String,System.String,System.String,System.String)">
            <summary>
                Get a playlist owned by a Spotify user.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="fields">
                Filters for the query: a comma-separated list of the fields to return. If omitted, all fields are
                returned.
            </param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetPlaylistTracks(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
                Get full details of the tracks of a playlist owned by a Spotify user.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="fields">
                Filters for the query: a comma-separated list of the fields to return. If omitted, all fields are
                returned.
            </param>
            <param name="limit">The maximum number of tracks to return. Default: 100. Minimum: 1. Maximum: 100.</param>
            <param name="offset">The index of the first object to return. Default: 0 (i.e., the first object)</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.CreatePlaylist(System.String,System.String,System.Boolean)">
            <summary>
                Create a playlist for a Spotify user. (The playlist will be empty until you add tracks.)
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistName">
                The name for the new playlist, for example "Your Coolest Playlist". This name does not need
                to be unique.
            </param>
            <param name="isPublic">
                default true. If true the playlist will be public, if false it will be private. To be able to
                create private playlists, the user must have granted the playlist-modify-private scope.
            </param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.UpdatePlaylist(System.String,System.String)">
            <summary>
                Change a playlist’s name and public/private state. (The user must, of course, own the playlist.)
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.ReplacePlaylistTracks(System.String,System.String)">
            <summary>
                Replace all the tracks in a playlist, overwriting its existing tracks. This powerful request can be useful for
                replacing tracks, re-ordering existing tracks, or clearing the playlist.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.RemovePlaylistTracks(System.String,System.String,System.Collections.Generic.List{SpotifyAPI.Web.Models.DeleteTrackUri})">
            <summary>
                Remove one or more tracks from a user’s playlist.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="uris">
                array of objects containing Spotify URI strings (and their position in the playlist). A maximum of
                100 objects can be sent at once.
            </param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.AddPlaylistTracks(System.String,System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32})">
            <summary>
                Add one or more tracks to a user’s playlist.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <param name="uris">A list of Spotify track URIs to add</param>
            <param name="position">The position to insert the tracks, a zero-based index</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.ReorderPlaylist(System.String,System.String)">
            <summary>
                Reorder a track or a group of tracks in a playlist.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <param name="playlistId">The Spotify ID for the playlist.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetPrivateProfile">
            <summary>
                Get detailed profile information about the current user (including the current user’s username).
            </summary>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetPublicProfile(System.String)">
            <summary>
                Get public profile information about a Spotify user.
            </summary>
            <param name="userId">The user's Spotify user ID.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetSeveralTracks(System.Collections.Generic.List{System.String},System.String)">
            <summary>
                Get Spotify catalog information for multiple tracks based on their Spotify IDs.
            </summary>
            <param name="ids">A list of the Spotify IDs for the tracks. Maximum: 50 IDs.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetTrack(System.String,System.String)">
            <summary>
                Get Spotify catalog information for a single track identified by its unique Spotify ID.
            </summary>
            <param name="id">The Spotify ID for the track.</param>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetAudioAnalysis(System.String)">
            <summary>
                Get a detailed audio analysis for a single track identified by its unique Spotify ID.
            </summary>
            <param name="id">The Spotify ID for the track.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetAudioFeatures(System.String)">
            <summary>
                Get audio feature information for a single track identified by its unique Spotify ID.
            </summary>
            <param name="id">The Spotify ID for the track.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetSeveralAudioFeatures(System.Collections.Generic.List{System.String})">
            <summary>
                Get audio features for multiple tracks based on their Spotify IDs.
            </summary>
            <param name="ids">A list of Spotify Track-IDs. Maximum: 100 IDs.</param>
            <returns></returns>
            <remarks>AUTH NEEDED</remarks>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetDevices">
            <summary>
                Get information about a user’s available devices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetPlayback(System.String)">
            <summary>
                Get information about the user’s current playback state, including track, track progress, and active device.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.GetPlayingTrack(System.String)">
            <summary>
                Get the object currently being played on the user’s Spotify account.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.TransferPlayback">
            <summary>
                Transfer playback to a new device and determine if it should start playing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.ResumePlayback(System.String)">
            <summary>
                Start a new context or resume current playback on the user’s active device.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.PausePlayback(System.String)">
            <summary>
                Pause playback on the user’s account.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.SkipPlaybackToNext(System.String)">
            <summary>
                Skips to next track in the user’s queue.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.SkipPlaybackToPrevious(System.String)">
            <summary>
                Skips to previous track in the user’s queue.
                Note that this will ALWAYS skip to the previous track, regardless of the current track’s progress.
                Returning to the start of the current track should be performed using the https://api.spotify.com/v1/me/player/seek endpoint.
            </summary>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.SeekPlayback(System.Int32,System.String)">
            <summary>
                Seeks to the given position in the user’s currently playing track.
            </summary>
            <param name="positionMs">The position in milliseconds to seek to. Must be a positive number. 
            Passing in a position that is greater than the length of the track will cause the player to start playing the next song.</param>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.SetRepeatMode(SpotifyAPI.Web.Enums.RepeatState,System.String)">
            <summary>
                Set the repeat mode for the user’s playback. Options are repeat-track, repeat-context, and off.
            </summary>
            <param name="repeatState">track, context or off.</param>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.SetVolume(System.Int32,System.String)">
            <summary>
                Set the volume for the user’s current playback device.
            </summary>
            <param name="volumePercent">Integer. The volume to set. Must be a value from 0 to 100 inclusive.</param>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.Web.SpotifyWebBuilder.SetShuffle(System.Boolean,System.String)">
            <summary>
                Toggle shuffle on or off for user’s playback.
            </summary>
            <param name="shuffle">True of False.</param>
            <param name="deviceId">The id of the device this command is targeting. If not supplied, the user's currently active device is the target.</param>
            <returns></returns>
        </member>
        <member name="P:SpotifyAPI.ProxyConfig.BypassProxyOnLocal">
            <summary>
            Whether to bypass the proxy server for local addresses.
            </summary>
        </member>
        <member name="M:SpotifyAPI.ProxyConfig.IsValid">
            <summary>
            Whether both <see cref="P:SpotifyAPI.ProxyConfig.Host"/> and <see cref="P:SpotifyAPI.ProxyConfig.Port"/> have valid values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpotifyAPI.ProxyConfig.GetUri">
            <summary>
            Create a <see cref="T:System.Uri"/> from the host and port number
            </summary>
            <returns>A URI</returns>
        </member>
        <member name="M:SpotifyAPI.ProxyConfig.CreateWebProxy">
            <summary>
            Creates a <see cref="T:System.Net.WebProxy"/> from the proxy details of this object.
            </summary>
            <returns>A <see cref="T:System.Net.WebProxy"/> or <code>null</code> if the proxy details are invalid.</returns>
        </member>
    </members>
</doc>
